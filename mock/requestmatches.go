// Copyright 2021 The go-github AUTHORS. All rights reserved.
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by mock/gen/gen-request-matches.go; DO NOT EDIT.

package mock

var RequestMatchAbuseRateLimitErrorError RequestMatch = "github.(*AbuseRateLimitError).Error"

var RequestMatchAbuseRateLimitErrorIs RequestMatch = "github.(*AbuseRateLimitError).Is"

var RequestMatchAcceptedErrorError RequestMatch = "github.(*AcceptedError).Error"

var RequestMatchAcceptedErrorIs RequestMatch = "github.(*AcceptedError).Is"

var RequestMatchActionsAddRepositoryAccessRunnerGroup RequestMatch = "github.(*ActionsService).AddRepositoryAccessRunnerGroup"

var RequestMatchActionsAddRunnerGroupRunners RequestMatch = "github.(*ActionsService).AddRunnerGroupRunners"

var RequestMatchActionsAddSelectedRepoToOrgSecret RequestMatch = "github.(*ActionsService).AddSelectedRepoToOrgSecret"

var RequestMatchActionsCancelWorkflowRunByID RequestMatch = "github.(*ActionsService).CancelWorkflowRunByID"

var RequestMatchActionsCreateOrUpdateEnvSecret RequestMatch = "github.(*ActionsService).CreateOrUpdateEnvSecret"

var RequestMatchActionsCreateOrUpdateOrgSecret RequestMatch = "github.(*ActionsService).CreateOrUpdateOrgSecret"

var RequestMatchActionsCreateOrUpdateRepoSecret RequestMatch = "github.(*ActionsService).CreateOrUpdateRepoSecret"

var RequestMatchActionsCreateOrganizationRegistrationToken RequestMatch = "github.(*ActionsService).CreateOrganizationRegistrationToken"

var RequestMatchActionsCreateOrganizationRemoveToken RequestMatch = "github.(*ActionsService).CreateOrganizationRemoveToken"

var RequestMatchActionsCreateOrganizationRunnerGroup RequestMatch = "github.(*ActionsService).CreateOrganizationRunnerGroup"

var RequestMatchActionsCreateRegistrationToken RequestMatch = "github.(*ActionsService).CreateRegistrationToken"

var RequestMatchActionsCreateRemoveToken RequestMatch = "github.(*ActionsService).CreateRemoveToken"

var RequestMatchActionsCreateWorkflowDispatchEventByFileName RequestMatch = "github.(*ActionsService).CreateWorkflowDispatchEventByFileName"

var RequestMatchActionsCreateWorkflowDispatchEventByID RequestMatch = "github.(*ActionsService).CreateWorkflowDispatchEventByID"

var RequestMatchActionsDeleteArtifact RequestMatch = "github.(*ActionsService).DeleteArtifact"

var RequestMatchActionsDeleteEnvSecret RequestMatch = "github.(*ActionsService).DeleteEnvSecret"

var RequestMatchActionsDeleteOrgSecret RequestMatch = "github.(*ActionsService).DeleteOrgSecret"

var RequestMatchActionsDeleteOrganizationRunnerGroup RequestMatch = "github.(*ActionsService).DeleteOrganizationRunnerGroup"

var RequestMatchActionsDeleteRepoSecret RequestMatch = "github.(*ActionsService).DeleteRepoSecret"

var RequestMatchActionsDeleteWorkflowRunLogs RequestMatch = "github.(*ActionsService).DeleteWorkflowRunLogs"

var RequestMatchActionsDisableWorkflowByFileName RequestMatch = "github.(*ActionsService).DisableWorkflowByFileName"

var RequestMatchActionsDisableWorkflowByID RequestMatch = "github.(*ActionsService).DisableWorkflowByID"

var RequestMatchActionsDownloadArtifact RequestMatch = "github.(*ActionsService).DownloadArtifact"

var RequestMatchActionsEnableWorkflowByFileName RequestMatch = "github.(*ActionsService).EnableWorkflowByFileName"

var RequestMatchActionsEnableWorkflowByID RequestMatch = "github.(*ActionsService).EnableWorkflowByID"

var RequestMatchActionsGetArtifact RequestMatch = "github.(*ActionsService).GetArtifact"

var RequestMatchActionsGetEnvPublicKey RequestMatch = "github.(*ActionsService).GetEnvPublicKey"

var RequestMatchActionsGetEnvSecret RequestMatch = "github.(*ActionsService).GetEnvSecret"

var RequestMatchActionsGetOrgPublicKey RequestMatch = "github.(*ActionsService).GetOrgPublicKey"

var RequestMatchActionsGetOrgSecret RequestMatch = "github.(*ActionsService).GetOrgSecret"

var RequestMatchActionsGetOrganizationRunner RequestMatch = "github.(*ActionsService).GetOrganizationRunner"

var RequestMatchActionsGetOrganizationRunnerGroup RequestMatch = "github.(*ActionsService).GetOrganizationRunnerGroup"

var RequestMatchActionsGetRepoPublicKey RequestMatch = "github.(*ActionsService).GetRepoPublicKey"

var RequestMatchActionsGetRepoSecret RequestMatch = "github.(*ActionsService).GetRepoSecret"

var RequestMatchActionsGetRunner RequestMatch = "github.(*ActionsService).GetRunner"

var RequestMatchActionsGetWorkflowByFileName RequestMatch = "github.(*ActionsService).GetWorkflowByFileName"

var RequestMatchActionsGetWorkflowByID RequestMatch = "github.(*ActionsService).GetWorkflowByID"

var RequestMatchActionsGetWorkflowJobByID RequestMatch = "github.(*ActionsService).GetWorkflowJobByID"

var RequestMatchActionsGetWorkflowJobLogs RequestMatch = "github.(*ActionsService).GetWorkflowJobLogs"

var RequestMatchActionsGetWorkflowRunByID RequestMatch = "github.(*ActionsService).GetWorkflowRunByID"

var RequestMatchActionsGetWorkflowRunLogs RequestMatch = "github.(*ActionsService).GetWorkflowRunLogs"

var RequestMatchActionsGetWorkflowRunUsageByID RequestMatch = "github.(*ActionsService).GetWorkflowRunUsageByID"

var RequestMatchActionsGetWorkflowUsageByFileName RequestMatch = "github.(*ActionsService).GetWorkflowUsageByFileName"

var RequestMatchActionsGetWorkflowUsageByID RequestMatch = "github.(*ActionsService).GetWorkflowUsageByID"

var RequestMatchActionsListArtifacts RequestMatch = "github.(*ActionsService).ListArtifacts"

var RequestMatchActionsListEnabledReposInOrg RequestMatch = "github.(*ActionsService).ListEnabledReposInOrg"

var RequestMatchActionsListEnvSecrets RequestMatch = "github.(*ActionsService).ListEnvSecrets"

var RequestMatchActionsListOrgSecrets RequestMatch = "github.(*ActionsService).ListOrgSecrets"

var RequestMatchActionsListOrganizationRunnerApplicationDownloads RequestMatch = "github.(*ActionsService).ListOrganizationRunnerApplicationDownloads"

var RequestMatchActionsListOrganizationRunnerGroups RequestMatch = "github.(*ActionsService).ListOrganizationRunnerGroups"

var RequestMatchActionsListOrganizationRunners RequestMatch = "github.(*ActionsService).ListOrganizationRunners"

var RequestMatchActionsListRepoSecrets RequestMatch = "github.(*ActionsService).ListRepoSecrets"

var RequestMatchActionsListRepositoryAccessRunnerGroup RequestMatch = "github.(*ActionsService).ListRepositoryAccessRunnerGroup"

var RequestMatchActionsListRepositoryWorkflowRuns RequestMatch = "github.(*ActionsService).ListRepositoryWorkflowRuns"

var RequestMatchActionsListRunnerApplicationDownloads RequestMatch = "github.(*ActionsService).ListRunnerApplicationDownloads"

var RequestMatchActionsListRunnerGroupRunners RequestMatch = "github.(*ActionsService).ListRunnerGroupRunners"

var RequestMatchActionsListRunners RequestMatch = "github.(*ActionsService).ListRunners"

var RequestMatchActionsListSelectedReposForOrgSecret RequestMatch = "github.(*ActionsService).ListSelectedReposForOrgSecret"

var RequestMatchActionsListWorkflowJobs RequestMatch = "github.(*ActionsService).ListWorkflowJobs"

var RequestMatchActionsListWorkflowRunArtifacts RequestMatch = "github.(*ActionsService).ListWorkflowRunArtifacts"

var RequestMatchActionsListWorkflowRunsByFileName RequestMatch = "github.(*ActionsService).ListWorkflowRunsByFileName"

var RequestMatchActionsListWorkflowRunsByID RequestMatch = "github.(*ActionsService).ListWorkflowRunsByID"

var RequestMatchActionsListWorkflows RequestMatch = "github.(*ActionsService).ListWorkflows"

var RequestMatchActionsRemoveOrganizationRunner RequestMatch = "github.(*ActionsService).RemoveOrganizationRunner"

var RequestMatchActionsRemoveRepositoryAccessRunnerGroup RequestMatch = "github.(*ActionsService).RemoveRepositoryAccessRunnerGroup"

var RequestMatchActionsRemoveRunner RequestMatch = "github.(*ActionsService).RemoveRunner"

var RequestMatchActionsRemoveRunnerGroupRunners RequestMatch = "github.(*ActionsService).RemoveRunnerGroupRunners"

var RequestMatchActionsRemoveSelectedRepoFromOrgSecret RequestMatch = "github.(*ActionsService).RemoveSelectedRepoFromOrgSecret"

var RequestMatchActionsRerunWorkflowByID RequestMatch = "github.(*ActionsService).RerunWorkflowByID"

var RequestMatchActionsSetRepositoryAccessRunnerGroup RequestMatch = "github.(*ActionsService).SetRepositoryAccessRunnerGroup"

var RequestMatchActionsSetRunnerGroupRunners RequestMatch = "github.(*ActionsService).SetRunnerGroupRunners"

var RequestMatchActionsSetSelectedReposForOrgSecret RequestMatch = "github.(*ActionsService).SetSelectedReposForOrgSecret"

var RequestMatchActionsUpdateOrganizationRunnerGroup RequestMatch = "github.(*ActionsService).UpdateOrganizationRunnerGroup"

var RequestMatchActivityDeleteRepositorySubscription RequestMatch = "github.(*ActivityService).DeleteRepositorySubscription"

var RequestMatchActivityDeleteThreadSubscription RequestMatch = "github.(*ActivityService).DeleteThreadSubscription"

var RequestMatchActivityGetRepositorySubscription RequestMatch = "github.(*ActivityService).GetRepositorySubscription"

var RequestMatchActivityGetThread RequestMatch = "github.(*ActivityService).GetThread"

var RequestMatchActivityGetThreadSubscription RequestMatch = "github.(*ActivityService).GetThreadSubscription"

var RequestMatchActivityIsStarred RequestMatch = "github.(*ActivityService).IsStarred"

var RequestMatchActivityListEvents RequestMatch = "github.(*ActivityService).ListEvents"

var RequestMatchActivityListEventsForOrganization RequestMatch = "github.(*ActivityService).ListEventsForOrganization"

var RequestMatchActivityListEventsForRepoNetwork RequestMatch = "github.(*ActivityService).ListEventsForRepoNetwork"

var RequestMatchActivityListEventsPerformedByUser RequestMatch = "github.(*ActivityService).ListEventsPerformedByUser"

var RequestMatchActivityListEventsReceivedByUser RequestMatch = "github.(*ActivityService).ListEventsReceivedByUser"

var RequestMatchActivityListFeeds RequestMatch = "github.(*ActivityService).ListFeeds"

var RequestMatchActivityListIssueEventsForRepository RequestMatch = "github.(*ActivityService).ListIssueEventsForRepository"

var RequestMatchActivityListNotifications RequestMatch = "github.(*ActivityService).ListNotifications"

var RequestMatchActivityListRepositoryEvents RequestMatch = "github.(*ActivityService).ListRepositoryEvents"

var RequestMatchActivityListRepositoryNotifications RequestMatch = "github.(*ActivityService).ListRepositoryNotifications"

var RequestMatchActivityListStargazers RequestMatch = "github.(*ActivityService).ListStargazers"

var RequestMatchActivityListStarred RequestMatch = "github.(*ActivityService).ListStarred"

var RequestMatchActivityListUserEventsForOrganization RequestMatch = "github.(*ActivityService).ListUserEventsForOrganization"

var RequestMatchActivityListWatched RequestMatch = "github.(*ActivityService).ListWatched"

var RequestMatchActivityListWatchers RequestMatch = "github.(*ActivityService).ListWatchers"

var RequestMatchActivityMarkNotificationsRead RequestMatch = "github.(*ActivityService).MarkNotificationsRead"

var RequestMatchActivityMarkRepositoryNotificationsRead RequestMatch = "github.(*ActivityService).MarkRepositoryNotificationsRead"

var RequestMatchActivityMarkThreadRead RequestMatch = "github.(*ActivityService).MarkThreadRead"

var RequestMatchActivitySetRepositorySubscription RequestMatch = "github.(*ActivityService).SetRepositorySubscription"

var RequestMatchActivitySetThreadSubscription RequestMatch = "github.(*ActivityService).SetThreadSubscription"

var RequestMatchActivityStar RequestMatch = "github.(*ActivityService).Star"

var RequestMatchActivityUnstar RequestMatch = "github.(*ActivityService).Unstar"

var RequestMatchAdminCreateOrg RequestMatch = "github.(*AdminService).CreateOrg"

var RequestMatchAdminCreateUser RequestMatch = "github.(*AdminService).CreateUser"

var RequestMatchAdminCreateUserImpersonation RequestMatch = "github.(*AdminService).CreateUserImpersonation"

var RequestMatchAdminDeleteUser RequestMatch = "github.(*AdminService).DeleteUser"

var RequestMatchAdminDeleteUserImpersonation RequestMatch = "github.(*AdminService).DeleteUserImpersonation"

var RequestMatchAdminGetAdminStats RequestMatch = "github.(*AdminService).GetAdminStats"

var RequestMatchAdminRenameOrg RequestMatch = "github.(*AdminService).RenameOrg"

var RequestMatchAdminRenameOrgByName RequestMatch = "github.(*AdminService).RenameOrgByName"

var RequestMatchAdminUpdateTeamLDAPMapping RequestMatch = "github.(*AdminService).UpdateTeamLDAPMapping"

var RequestMatchAdminUpdateUserLDAPMapping RequestMatch = "github.(*AdminService).UpdateUserLDAPMapping"

var RequestMatchAlertID RequestMatch = "github.(*Alert).ID"

var RequestMatchAppsAddRepository RequestMatch = "github.(*AppsService).AddRepository"

var RequestMatchAppsCompleteAppManifest RequestMatch = "github.(*AppsService).CompleteAppManifest"

var RequestMatchAppsCreateAttachment RequestMatch = "github.(*AppsService).CreateAttachment"

var RequestMatchAppsCreateInstallationToken RequestMatch = "github.(*AppsService).CreateInstallationToken"

var RequestMatchAppsDeleteInstallation RequestMatch = "github.(*AppsService).DeleteInstallation"

var RequestMatchAppsFindOrganizationInstallation RequestMatch = "github.(*AppsService).FindOrganizationInstallation"

var RequestMatchAppsFindRepositoryInstallation RequestMatch = "github.(*AppsService).FindRepositoryInstallation"

var RequestMatchAppsFindRepositoryInstallationByID RequestMatch = "github.(*AppsService).FindRepositoryInstallationByID"

var RequestMatchAppsFindUserInstallation RequestMatch = "github.(*AppsService).FindUserInstallation"

var RequestMatchAppsGet RequestMatch = "github.(*AppsService).Get"

var RequestMatchAppsGetInstallation RequestMatch = "github.(*AppsService).GetInstallation"

var RequestMatchAppsListInstallations RequestMatch = "github.(*AppsService).ListInstallations"

var RequestMatchAppsListRepos RequestMatch = "github.(*AppsService).ListRepos"

var RequestMatchAppsListUserInstallations RequestMatch = "github.(*AppsService).ListUserInstallations"

var RequestMatchAppsListUserRepos RequestMatch = "github.(*AppsService).ListUserRepos"

var RequestMatchAppsRemoveRepository RequestMatch = "github.(*AppsService).RemoveRepository"

var RequestMatchAppsRevokeInstallationToken RequestMatch = "github.(*AppsService).RevokeInstallationToken"

var RequestMatchAppsSuspendInstallation RequestMatch = "github.(*AppsService).SuspendInstallation"

var RequestMatchAppsUnsuspendInstallation RequestMatch = "github.(*AppsService).UnsuspendInstallation"

var RequestMatchAuthorizationsCheck RequestMatch = "github.(*AuthorizationsService).Check"

var RequestMatchAuthorizationsCreateImpersonation RequestMatch = "github.(*AuthorizationsService).CreateImpersonation"

var RequestMatchAuthorizationsDeleteGrant RequestMatch = "github.(*AuthorizationsService).DeleteGrant"

var RequestMatchAuthorizationsDeleteImpersonation RequestMatch = "github.(*AuthorizationsService).DeleteImpersonation"

var RequestMatchAuthorizationsReset RequestMatch = "github.(*AuthorizationsService).Reset"

var RequestMatchAuthorizationsRevoke RequestMatch = "github.(*AuthorizationsService).Revoke"

var RequestMatchBasicAuthTransportClient RequestMatch = "github.(*BasicAuthTransport).Client"

var RequestMatchBasicAuthTransportRoundTrip RequestMatch = "github.(*BasicAuthTransport).RoundTrip"

var RequestMatchBillingGetActionsBillingOrg RequestMatch = "github.(*BillingService).GetActionsBillingOrg"

var RequestMatchBillingGetActionsBillingUser RequestMatch = "github.(*BillingService).GetActionsBillingUser"

var RequestMatchBillingGetPackagesBillingOrg RequestMatch = "github.(*BillingService).GetPackagesBillingOrg"

var RequestMatchBillingGetPackagesBillingUser RequestMatch = "github.(*BillingService).GetPackagesBillingUser"

var RequestMatchBillingGetStorageBillingOrg RequestMatch = "github.(*BillingService).GetStorageBillingOrg"

var RequestMatchBillingGetStorageBillingUser RequestMatch = "github.(*BillingService).GetStorageBillingUser"

var RequestMatchChecksCreateCheckRun RequestMatch = "github.(*ChecksService).CreateCheckRun"

var RequestMatchChecksCreateCheckSuite RequestMatch = "github.(*ChecksService).CreateCheckSuite"

var RequestMatchChecksGetCheckRun RequestMatch = "github.(*ChecksService).GetCheckRun"

var RequestMatchChecksGetCheckSuite RequestMatch = "github.(*ChecksService).GetCheckSuite"

var RequestMatchChecksListCheckRunAnnotations RequestMatch = "github.(*ChecksService).ListCheckRunAnnotations"

var RequestMatchChecksListCheckRunsCheckSuite RequestMatch = "github.(*ChecksService).ListCheckRunsCheckSuite"

var RequestMatchChecksListCheckRunsForRef RequestMatch = "github.(*ChecksService).ListCheckRunsForRef"

var RequestMatchChecksListCheckSuitesForRef RequestMatch = "github.(*ChecksService).ListCheckSuitesForRef"

var RequestMatchChecksReRequestCheckSuite RequestMatch = "github.(*ChecksService).ReRequestCheckSuite"

var RequestMatchChecksSetCheckSuitePreferences RequestMatch = "github.(*ChecksService).SetCheckSuitePreferences"

var RequestMatchChecksUpdateCheckRun RequestMatch = "github.(*ChecksService).UpdateCheckRun"

var RequestMatchClientAPIMeta RequestMatch = "github.(*Client).APIMeta"

var RequestMatchClientBareDo RequestMatch = "github.(*Client).BareDo"

var RequestMatchClientDo RequestMatch = "github.(*Client).Do"

var RequestMatchClientGetCodeOfConduct RequestMatch = "github.(*Client).GetCodeOfConduct"

var RequestMatchClientListCodesOfConduct RequestMatch = "github.(*Client).ListCodesOfConduct"

var RequestMatchClientListEmojis RequestMatch = "github.(*Client).ListEmojis"

var RequestMatchClientListServiceHooks RequestMatch = "github.(*Client).ListServiceHooks"

var RequestMatchClientMarkdown RequestMatch = "github.(*Client).Markdown"

var RequestMatchClientNewRequest RequestMatch = "github.(*Client).NewRequest"

var RequestMatchClientNewUploadRequest RequestMatch = "github.(*Client).NewUploadRequest"

var RequestMatchClientOctocat RequestMatch = "github.(*Client).Octocat"

var RequestMatchClientRateLimits RequestMatch = "github.(*Client).RateLimits"

var RequestMatchClientZen RequestMatch = "github.(*Client).Zen"

var RequestMatchCodeOfConductString RequestMatch = "github.(*CodeOfConduct).String"

var RequestMatchCodeScanningGetAlert RequestMatch = "github.(*CodeScanningService).GetAlert"

var RequestMatchCodeScanningListAlertsForRepo RequestMatch = "github.(*CodeScanningService).ListAlertsForRepo"

var RequestMatchCreateUpdateEnvironmentMarshalJSON RequestMatch = "github.(*CreateUpdateEnvironment).MarshalJSON"

var RequestMatchEnterpriseCreateRegistrationToken RequestMatch = "github.(*EnterpriseService).CreateRegistrationToken"

var RequestMatchEnterpriseGetAuditLog RequestMatch = "github.(*EnterpriseService).GetAuditLog"

var RequestMatchEnterpriseListRunners RequestMatch = "github.(*EnterpriseService).ListRunners"

var RequestMatchEnterpriseRemoveRunner RequestMatch = "github.(*EnterpriseService).RemoveRunner"

var RequestMatchErrorError RequestMatch = "github.(*Error).Error"

var RequestMatchErrorUnmarshalJSON RequestMatch = "github.(*Error).UnmarshalJSON"

var RequestMatchErrorResponseError RequestMatch = "github.(*ErrorResponse).Error"

var RequestMatchErrorResponseIs RequestMatch = "github.(*ErrorResponse).Is"

var RequestMatchEventParsePayload RequestMatch = "github.(*Event).ParsePayload"

var RequestMatchEventPayload RequestMatch = "github.(*Event).Payload"

var RequestMatchGistsCreate RequestMatch = "github.(*GistsService).Create"

var RequestMatchGistsCreateComment RequestMatch = "github.(*GistsService).CreateComment"

var RequestMatchGistsDelete RequestMatch = "github.(*GistsService).Delete"

var RequestMatchGistsDeleteComment RequestMatch = "github.(*GistsService).DeleteComment"

var RequestMatchGistsEdit RequestMatch = "github.(*GistsService).Edit"

var RequestMatchGistsEditComment RequestMatch = "github.(*GistsService).EditComment"

var RequestMatchGistsFork RequestMatch = "github.(*GistsService).Fork"

var RequestMatchGistsGet RequestMatch = "github.(*GistsService).Get"

var RequestMatchGistsGetComment RequestMatch = "github.(*GistsService).GetComment"

var RequestMatchGistsGetRevision RequestMatch = "github.(*GistsService).GetRevision"

var RequestMatchGistsIsStarred RequestMatch = "github.(*GistsService).IsStarred"

var RequestMatchGistsList RequestMatch = "github.(*GistsService).List"

var RequestMatchGistsListAll RequestMatch = "github.(*GistsService).ListAll"

var RequestMatchGistsListComments RequestMatch = "github.(*GistsService).ListComments"

var RequestMatchGistsListCommits RequestMatch = "github.(*GistsService).ListCommits"

var RequestMatchGistsListForks RequestMatch = "github.(*GistsService).ListForks"

var RequestMatchGistsListStarred RequestMatch = "github.(*GistsService).ListStarred"

var RequestMatchGistsStar RequestMatch = "github.(*GistsService).Star"

var RequestMatchGistsUnstar RequestMatch = "github.(*GistsService).Unstar"

var RequestMatchGitCreateBlob RequestMatch = "github.(*GitService).CreateBlob"

var RequestMatchGitCreateCommit RequestMatch = "github.(*GitService).CreateCommit"

var RequestMatchGitCreateRef RequestMatch = "github.(*GitService).CreateRef"

var RequestMatchGitCreateTag RequestMatch = "github.(*GitService).CreateTag"

var RequestMatchGitCreateTree RequestMatch = "github.(*GitService).CreateTree"

var RequestMatchGitDeleteRef RequestMatch = "github.(*GitService).DeleteRef"

var RequestMatchGitGetBlob RequestMatch = "github.(*GitService).GetBlob"

var RequestMatchGitGetBlobRaw RequestMatch = "github.(*GitService).GetBlobRaw"

var RequestMatchGitGetCommit RequestMatch = "github.(*GitService).GetCommit"

var RequestMatchGitGetRef RequestMatch = "github.(*GitService).GetRef"

var RequestMatchGitGetTag RequestMatch = "github.(*GitService).GetTag"

var RequestMatchGitGetTree RequestMatch = "github.(*GitService).GetTree"

var RequestMatchGitListMatchingRefs RequestMatch = "github.(*GitService).ListMatchingRefs"

var RequestMatchGitUpdateRef RequestMatch = "github.(*GitService).UpdateRef"

var RequestMatchGitignoresGet RequestMatch = "github.(*GitignoresService).Get"

var RequestMatchGitignoresList RequestMatch = "github.(*GitignoresService).List"

var RequestMatchInteractionsGetRestrictionsForOrg RequestMatch = "github.(*InteractionsService).GetRestrictionsForOrg"

var RequestMatchInteractionsGetRestrictionsForRepo RequestMatch = "github.(*InteractionsService).GetRestrictionsForRepo"

var RequestMatchInteractionsRemoveRestrictionsFromOrg RequestMatch = "github.(*InteractionsService).RemoveRestrictionsFromOrg"

var RequestMatchInteractionsRemoveRestrictionsFromRepo RequestMatch = "github.(*InteractionsService).RemoveRestrictionsFromRepo"

var RequestMatchInteractionsUpdateRestrictionsForOrg RequestMatch = "github.(*InteractionsService).UpdateRestrictionsForOrg"

var RequestMatchInteractionsUpdateRestrictionsForRepo RequestMatch = "github.(*InteractionsService).UpdateRestrictionsForRepo"

var RequestMatchIssueImportCheckStatus RequestMatch = "github.(*IssueImportService).CheckStatus"

var RequestMatchIssueImportCheckStatusSince RequestMatch = "github.(*IssueImportService).CheckStatusSince"

var RequestMatchIssueImportCreate RequestMatch = "github.(*IssueImportService).Create"

var RequestMatchIssuesAddAssignees RequestMatch = "github.(*IssuesService).AddAssignees"

var RequestMatchIssuesAddLabelsToIssue RequestMatch = "github.(*IssuesService).AddLabelsToIssue"

var RequestMatchIssuesCreate RequestMatch = "github.(*IssuesService).Create"

var RequestMatchIssuesCreateComment RequestMatch = "github.(*IssuesService).CreateComment"

var RequestMatchIssuesCreateLabel RequestMatch = "github.(*IssuesService).CreateLabel"

var RequestMatchIssuesCreateMilestone RequestMatch = "github.(*IssuesService).CreateMilestone"

var RequestMatchIssuesDeleteComment RequestMatch = "github.(*IssuesService).DeleteComment"

var RequestMatchIssuesDeleteLabel RequestMatch = "github.(*IssuesService).DeleteLabel"

var RequestMatchIssuesDeleteMilestone RequestMatch = "github.(*IssuesService).DeleteMilestone"

var RequestMatchIssuesEdit RequestMatch = "github.(*IssuesService).Edit"

var RequestMatchIssuesEditComment RequestMatch = "github.(*IssuesService).EditComment"

var RequestMatchIssuesEditLabel RequestMatch = "github.(*IssuesService).EditLabel"

var RequestMatchIssuesEditMilestone RequestMatch = "github.(*IssuesService).EditMilestone"

var RequestMatchIssuesGet RequestMatch = "github.(*IssuesService).Get"

var RequestMatchIssuesGetComment RequestMatch = "github.(*IssuesService).GetComment"

var RequestMatchIssuesGetEvent RequestMatch = "github.(*IssuesService).GetEvent"

var RequestMatchIssuesGetLabel RequestMatch = "github.(*IssuesService).GetLabel"

var RequestMatchIssuesGetMilestone RequestMatch = "github.(*IssuesService).GetMilestone"

var RequestMatchIssuesIsAssignee RequestMatch = "github.(*IssuesService).IsAssignee"

var RequestMatchIssuesList RequestMatch = "github.(*IssuesService).List"

var RequestMatchIssuesListAssignees RequestMatch = "github.(*IssuesService).ListAssignees"

var RequestMatchIssuesListByOrg RequestMatch = "github.(*IssuesService).ListByOrg"

var RequestMatchIssuesListByRepo RequestMatch = "github.(*IssuesService).ListByRepo"

var RequestMatchIssuesListComments RequestMatch = "github.(*IssuesService).ListComments"

var RequestMatchIssuesListIssueEvents RequestMatch = "github.(*IssuesService).ListIssueEvents"

var RequestMatchIssuesListIssueTimeline RequestMatch = "github.(*IssuesService).ListIssueTimeline"

var RequestMatchIssuesListLabels RequestMatch = "github.(*IssuesService).ListLabels"

var RequestMatchIssuesListLabelsByIssue RequestMatch = "github.(*IssuesService).ListLabelsByIssue"

var RequestMatchIssuesListLabelsForMilestone RequestMatch = "github.(*IssuesService).ListLabelsForMilestone"

var RequestMatchIssuesListMilestones RequestMatch = "github.(*IssuesService).ListMilestones"

var RequestMatchIssuesListRepositoryEvents RequestMatch = "github.(*IssuesService).ListRepositoryEvents"

var RequestMatchIssuesLock RequestMatch = "github.(*IssuesService).Lock"

var RequestMatchIssuesRemoveAssignees RequestMatch = "github.(*IssuesService).RemoveAssignees"

var RequestMatchIssuesRemoveLabelForIssue RequestMatch = "github.(*IssuesService).RemoveLabelForIssue"

var RequestMatchIssuesRemoveLabelsForIssue RequestMatch = "github.(*IssuesService).RemoveLabelsForIssue"

var RequestMatchIssuesReplaceLabelsForIssue RequestMatch = "github.(*IssuesService).ReplaceLabelsForIssue"

var RequestMatchIssuesUnlock RequestMatch = "github.(*IssuesService).Unlock"

var RequestMatchLicensesGet RequestMatch = "github.(*LicensesService).Get"

var RequestMatchLicensesList RequestMatch = "github.(*LicensesService).List"

var RequestMatchMarketplaceGetPlanAccountForAccount RequestMatch = "github.(*MarketplaceService).GetPlanAccountForAccount"

var RequestMatchMarketplaceListMarketplacePurchasesForUser RequestMatch = "github.(*MarketplaceService).ListMarketplacePurchasesForUser"

var RequestMatchMarketplaceListPlanAccountsForPlan RequestMatch = "github.(*MarketplaceService).ListPlanAccountsForPlan"

var RequestMatchMarketplaceListPlans RequestMatch = "github.(*MarketplaceService).ListPlans"

var RequestMatchMigrationCancelImport RequestMatch = "github.(*MigrationService).CancelImport"

var RequestMatchMigrationCommitAuthors RequestMatch = "github.(*MigrationService).CommitAuthors"

var RequestMatchMigrationDeleteMigration RequestMatch = "github.(*MigrationService).DeleteMigration"

var RequestMatchMigrationDeleteUserMigration RequestMatch = "github.(*MigrationService).DeleteUserMigration"

var RequestMatchMigrationImportProgress RequestMatch = "github.(*MigrationService).ImportProgress"

var RequestMatchMigrationLargeFiles RequestMatch = "github.(*MigrationService).LargeFiles"

var RequestMatchMigrationListMigrations RequestMatch = "github.(*MigrationService).ListMigrations"

var RequestMatchMigrationListUserMigrations RequestMatch = "github.(*MigrationService).ListUserMigrations"

var RequestMatchMigrationMapCommitAuthor RequestMatch = "github.(*MigrationService).MapCommitAuthor"

var RequestMatchMigrationMigrationArchiveURL RequestMatch = "github.(*MigrationService).MigrationArchiveURL"

var RequestMatchMigrationMigrationStatus RequestMatch = "github.(*MigrationService).MigrationStatus"

var RequestMatchMigrationSetLFSPreference RequestMatch = "github.(*MigrationService).SetLFSPreference"

var RequestMatchMigrationStartImport RequestMatch = "github.(*MigrationService).StartImport"

var RequestMatchMigrationStartMigration RequestMatch = "github.(*MigrationService).StartMigration"

var RequestMatchMigrationStartUserMigration RequestMatch = "github.(*MigrationService).StartUserMigration"

var RequestMatchMigrationUnlockRepo RequestMatch = "github.(*MigrationService).UnlockRepo"

var RequestMatchMigrationUnlockUserRepo RequestMatch = "github.(*MigrationService).UnlockUserRepo"

var RequestMatchMigrationUpdateImport RequestMatch = "github.(*MigrationService).UpdateImport"

var RequestMatchMigrationUserMigrationArchiveURL RequestMatch = "github.(*MigrationService).UserMigrationArchiveURL"

var RequestMatchMigrationUserMigrationStatus RequestMatch = "github.(*MigrationService).UserMigrationStatus"

var RequestMatchOrganizationsBlockUser RequestMatch = "github.(*OrganizationsService).BlockUser"

var RequestMatchOrganizationsConcealMembership RequestMatch = "github.(*OrganizationsService).ConcealMembership"

var RequestMatchOrganizationsConvertMemberToOutsideCollaborator RequestMatch = "github.(*OrganizationsService).ConvertMemberToOutsideCollaborator"

var RequestMatchOrganizationsCreateHook RequestMatch = "github.(*OrganizationsService).CreateHook"

var RequestMatchOrganizationsCreateOrgInvitation RequestMatch = "github.(*OrganizationsService).CreateOrgInvitation"

var RequestMatchOrganizationsCreateProject RequestMatch = "github.(*OrganizationsService).CreateProject"

var RequestMatchOrganizationsDeleteHook RequestMatch = "github.(*OrganizationsService).DeleteHook"

var RequestMatchOrganizationsEdit RequestMatch = "github.(*OrganizationsService).Edit"

var RequestMatchOrganizationsEditActionsAllowed RequestMatch = "github.(*OrganizationsService).EditActionsAllowed"

var RequestMatchOrganizationsEditActionsPermissions RequestMatch = "github.(*OrganizationsService).EditActionsPermissions"

var RequestMatchOrganizationsEditHook RequestMatch = "github.(*OrganizationsService).EditHook"

var RequestMatchOrganizationsEditOrgMembership RequestMatch = "github.(*OrganizationsService).EditOrgMembership"

var RequestMatchOrganizationsGet RequestMatch = "github.(*OrganizationsService).Get"

var RequestMatchOrganizationsGetActionsAllowed RequestMatch = "github.(*OrganizationsService).GetActionsAllowed"

var RequestMatchOrganizationsGetActionsPermissions RequestMatch = "github.(*OrganizationsService).GetActionsPermissions"

var RequestMatchOrganizationsGetAuditLog RequestMatch = "github.(*OrganizationsService).GetAuditLog"

var RequestMatchOrganizationsGetByID RequestMatch = "github.(*OrganizationsService).GetByID"

var RequestMatchOrganizationsGetHook RequestMatch = "github.(*OrganizationsService).GetHook"

var RequestMatchOrganizationsGetOrgMembership RequestMatch = "github.(*OrganizationsService).GetOrgMembership"

var RequestMatchOrganizationsIsBlocked RequestMatch = "github.(*OrganizationsService).IsBlocked"

var RequestMatchOrganizationsIsMember RequestMatch = "github.(*OrganizationsService).IsMember"

var RequestMatchOrganizationsIsPublicMember RequestMatch = "github.(*OrganizationsService).IsPublicMember"

var RequestMatchOrganizationsList RequestMatch = "github.(*OrganizationsService).List"

var RequestMatchOrganizationsListAll RequestMatch = "github.(*OrganizationsService).ListAll"

var RequestMatchOrganizationsListBlockedUsers RequestMatch = "github.(*OrganizationsService).ListBlockedUsers"

var RequestMatchOrganizationsListFailedOrgInvitations RequestMatch = "github.(*OrganizationsService).ListFailedOrgInvitations"

var RequestMatchOrganizationsListHooks RequestMatch = "github.(*OrganizationsService).ListHooks"

var RequestMatchOrganizationsListInstallations RequestMatch = "github.(*OrganizationsService).ListInstallations"

var RequestMatchOrganizationsListMembers RequestMatch = "github.(*OrganizationsService).ListMembers"

var RequestMatchOrganizationsListOrgInvitationTeams RequestMatch = "github.(*OrganizationsService).ListOrgInvitationTeams"

var RequestMatchOrganizationsListOrgMemberships RequestMatch = "github.(*OrganizationsService).ListOrgMemberships"

var RequestMatchOrganizationsListOutsideCollaborators RequestMatch = "github.(*OrganizationsService).ListOutsideCollaborators"

var RequestMatchOrganizationsListPendingOrgInvitations RequestMatch = "github.(*OrganizationsService).ListPendingOrgInvitations"

var RequestMatchOrganizationsListProjects RequestMatch = "github.(*OrganizationsService).ListProjects"

var RequestMatchOrganizationsPingHook RequestMatch = "github.(*OrganizationsService).PingHook"

var RequestMatchOrganizationsPublicizeMembership RequestMatch = "github.(*OrganizationsService).PublicizeMembership"

var RequestMatchOrganizationsRemoveMember RequestMatch = "github.(*OrganizationsService).RemoveMember"

var RequestMatchOrganizationsRemoveOrgMembership RequestMatch = "github.(*OrganizationsService).RemoveOrgMembership"

var RequestMatchOrganizationsRemoveOutsideCollaborator RequestMatch = "github.(*OrganizationsService).RemoveOutsideCollaborator"

var RequestMatchOrganizationsUnblockUser RequestMatch = "github.(*OrganizationsService).UnblockUser"

var RequestMatchProjectsAddProjectCollaborator RequestMatch = "github.(*ProjectsService).AddProjectCollaborator"

var RequestMatchProjectsCreateProjectCard RequestMatch = "github.(*ProjectsService).CreateProjectCard"

var RequestMatchProjectsCreateProjectColumn RequestMatch = "github.(*ProjectsService).CreateProjectColumn"

var RequestMatchProjectsDeleteProject RequestMatch = "github.(*ProjectsService).DeleteProject"

var RequestMatchProjectsDeleteProjectCard RequestMatch = "github.(*ProjectsService).DeleteProjectCard"

var RequestMatchProjectsDeleteProjectColumn RequestMatch = "github.(*ProjectsService).DeleteProjectColumn"

var RequestMatchProjectsGetProject RequestMatch = "github.(*ProjectsService).GetProject"

var RequestMatchProjectsGetProjectCard RequestMatch = "github.(*ProjectsService).GetProjectCard"

var RequestMatchProjectsGetProjectColumn RequestMatch = "github.(*ProjectsService).GetProjectColumn"

var RequestMatchProjectsListProjectCards RequestMatch = "github.(*ProjectsService).ListProjectCards"

var RequestMatchProjectsListProjectCollaborators RequestMatch = "github.(*ProjectsService).ListProjectCollaborators"

var RequestMatchProjectsListProjectColumns RequestMatch = "github.(*ProjectsService).ListProjectColumns"

var RequestMatchProjectsMoveProjectCard RequestMatch = "github.(*ProjectsService).MoveProjectCard"

var RequestMatchProjectsMoveProjectColumn RequestMatch = "github.(*ProjectsService).MoveProjectColumn"

var RequestMatchProjectsRemoveProjectCollaborator RequestMatch = "github.(*ProjectsService).RemoveProjectCollaborator"

var RequestMatchProjectsReviewProjectCollaboratorPermission RequestMatch = "github.(*ProjectsService).ReviewProjectCollaboratorPermission"

var RequestMatchProjectsUpdateProject RequestMatch = "github.(*ProjectsService).UpdateProject"

var RequestMatchProjectsUpdateProjectCard RequestMatch = "github.(*ProjectsService).UpdateProjectCard"

var RequestMatchProjectsUpdateProjectColumn RequestMatch = "github.(*ProjectsService).UpdateProjectColumn"

var RequestMatchPublicKeyUnmarshalJSON RequestMatch = "github.(*PublicKey).UnmarshalJSON"

var RequestMatchPullRequestsCreate RequestMatch = "github.(*PullRequestsService).Create"

var RequestMatchPullRequestsCreateComment RequestMatch = "github.(*PullRequestsService).CreateComment"

var RequestMatchPullRequestsCreateCommentInReplyTo RequestMatch = "github.(*PullRequestsService).CreateCommentInReplyTo"

var RequestMatchPullRequestsCreateReview RequestMatch = "github.(*PullRequestsService).CreateReview"

var RequestMatchPullRequestsDeleteComment RequestMatch = "github.(*PullRequestsService).DeleteComment"

var RequestMatchPullRequestsDeletePendingReview RequestMatch = "github.(*PullRequestsService).DeletePendingReview"

var RequestMatchPullRequestsDismissReview RequestMatch = "github.(*PullRequestsService).DismissReview"

var RequestMatchPullRequestsEdit RequestMatch = "github.(*PullRequestsService).Edit"

var RequestMatchPullRequestsEditComment RequestMatch = "github.(*PullRequestsService).EditComment"

var RequestMatchPullRequestsGet RequestMatch = "github.(*PullRequestsService).Get"

var RequestMatchPullRequestsGetComment RequestMatch = "github.(*PullRequestsService).GetComment"

var RequestMatchPullRequestsGetRaw RequestMatch = "github.(*PullRequestsService).GetRaw"

var RequestMatchPullRequestsGetReview RequestMatch = "github.(*PullRequestsService).GetReview"

var RequestMatchPullRequestsIsMerged RequestMatch = "github.(*PullRequestsService).IsMerged"

var RequestMatchPullRequestsList RequestMatch = "github.(*PullRequestsService).List"

var RequestMatchPullRequestsListComments RequestMatch = "github.(*PullRequestsService).ListComments"

var RequestMatchPullRequestsListCommits RequestMatch = "github.(*PullRequestsService).ListCommits"

var RequestMatchPullRequestsListFiles RequestMatch = "github.(*PullRequestsService).ListFiles"

var RequestMatchPullRequestsListPullRequestsWithCommit RequestMatch = "github.(*PullRequestsService).ListPullRequestsWithCommit"

var RequestMatchPullRequestsListReviewComments RequestMatch = "github.(*PullRequestsService).ListReviewComments"

var RequestMatchPullRequestsListReviewers RequestMatch = "github.(*PullRequestsService).ListReviewers"

var RequestMatchPullRequestsListReviews RequestMatch = "github.(*PullRequestsService).ListReviews"

var RequestMatchPullRequestsMerge RequestMatch = "github.(*PullRequestsService).Merge"

var RequestMatchPullRequestsRemoveReviewers RequestMatch = "github.(*PullRequestsService).RemoveReviewers"

var RequestMatchPullRequestsRequestReviewers RequestMatch = "github.(*PullRequestsService).RequestReviewers"

var RequestMatchPullRequestsSubmitReview RequestMatch = "github.(*PullRequestsService).SubmitReview"

var RequestMatchPullRequestsUpdateBranch RequestMatch = "github.(*PullRequestsService).UpdateBranch"

var RequestMatchPullRequestsUpdateReview RequestMatch = "github.(*PullRequestsService).UpdateReview"

var RequestMatchRateLimitErrorError RequestMatch = "github.(*RateLimitError).Error"

var RequestMatchRateLimitErrorIs RequestMatch = "github.(*RateLimitError).Is"

var RequestMatchReactionsCreateCommentReaction RequestMatch = "github.(*ReactionsService).CreateCommentReaction"

var RequestMatchReactionsCreateIssueCommentReaction RequestMatch = "github.(*ReactionsService).CreateIssueCommentReaction"

var RequestMatchReactionsCreateIssueReaction RequestMatch = "github.(*ReactionsService).CreateIssueReaction"

var RequestMatchReactionsCreatePullRequestCommentReaction RequestMatch = "github.(*ReactionsService).CreatePullRequestCommentReaction"

var RequestMatchReactionsCreateTeamDiscussionCommentReaction RequestMatch = "github.(*ReactionsService).CreateTeamDiscussionCommentReaction"

var RequestMatchReactionsCreateTeamDiscussionReaction RequestMatch = "github.(*ReactionsService).CreateTeamDiscussionReaction"

var RequestMatchReactionsDeleteCommentReaction RequestMatch = "github.(*ReactionsService).DeleteCommentReaction"

var RequestMatchReactionsDeleteCommentReactionByID RequestMatch = "github.(*ReactionsService).DeleteCommentReactionByID"

var RequestMatchReactionsDeleteIssueCommentReaction RequestMatch = "github.(*ReactionsService).DeleteIssueCommentReaction"

var RequestMatchReactionsDeleteIssueCommentReactionByID RequestMatch = "github.(*ReactionsService).DeleteIssueCommentReactionByID"

var RequestMatchReactionsDeleteIssueReaction RequestMatch = "github.(*ReactionsService).DeleteIssueReaction"

var RequestMatchReactionsDeleteIssueReactionByID RequestMatch = "github.(*ReactionsService).DeleteIssueReactionByID"

var RequestMatchReactionsDeletePullRequestCommentReaction RequestMatch = "github.(*ReactionsService).DeletePullRequestCommentReaction"

var RequestMatchReactionsDeletePullRequestCommentReactionByID RequestMatch = "github.(*ReactionsService).DeletePullRequestCommentReactionByID"

var RequestMatchReactionsDeleteTeamDiscussionCommentReaction RequestMatch = "github.(*ReactionsService).DeleteTeamDiscussionCommentReaction"

var RequestMatchReactionsDeleteTeamDiscussionCommentReactionByOrgIDAndTeamID RequestMatch = "github.(*ReactionsService).DeleteTeamDiscussionCommentReactionByOrgIDAndTeamID"

var RequestMatchReactionsDeleteTeamDiscussionReaction RequestMatch = "github.(*ReactionsService).DeleteTeamDiscussionReaction"

var RequestMatchReactionsDeleteTeamDiscussionReactionByOrgIDAndTeamID RequestMatch = "github.(*ReactionsService).DeleteTeamDiscussionReactionByOrgIDAndTeamID"

var RequestMatchReactionsListCommentReactions RequestMatch = "github.(*ReactionsService).ListCommentReactions"

var RequestMatchReactionsListIssueCommentReactions RequestMatch = "github.(*ReactionsService).ListIssueCommentReactions"

var RequestMatchReactionsListIssueReactions RequestMatch = "github.(*ReactionsService).ListIssueReactions"

var RequestMatchReactionsListPullRequestCommentReactions RequestMatch = "github.(*ReactionsService).ListPullRequestCommentReactions"

var RequestMatchReactionsListTeamDiscussionCommentReactions RequestMatch = "github.(*ReactionsService).ListTeamDiscussionCommentReactions"

var RequestMatchReactionsListTeamDiscussionReactions RequestMatch = "github.(*ReactionsService).ListTeamDiscussionReactions"

var RequestMatchRepositoriesAddAdminEnforcement RequestMatch = "github.(*RepositoriesService).AddAdminEnforcement"

var RequestMatchRepositoriesAddAppRestrictions RequestMatch = "github.(*RepositoriesService).AddAppRestrictions"

var RequestMatchRepositoriesAddCollaborator RequestMatch = "github.(*RepositoriesService).AddCollaborator"

var RequestMatchRepositoriesCompareCommits RequestMatch = "github.(*RepositoriesService).CompareCommits"

var RequestMatchRepositoriesCompareCommitsRaw RequestMatch = "github.(*RepositoriesService).CompareCommitsRaw"

var RequestMatchRepositoriesCreate RequestMatch = "github.(*RepositoriesService).Create"

var RequestMatchRepositoriesCreateComment RequestMatch = "github.(*RepositoriesService).CreateComment"

var RequestMatchRepositoriesCreateDeployment RequestMatch = "github.(*RepositoriesService).CreateDeployment"

var RequestMatchRepositoriesCreateDeploymentStatus RequestMatch = "github.(*RepositoriesService).CreateDeploymentStatus"

var RequestMatchRepositoriesCreateFile RequestMatch = "github.(*RepositoriesService).CreateFile"

var RequestMatchRepositoriesCreateFork RequestMatch = "github.(*RepositoriesService).CreateFork"

var RequestMatchRepositoriesCreateFromTemplate RequestMatch = "github.(*RepositoriesService).CreateFromTemplate"

var RequestMatchRepositoriesCreateHook RequestMatch = "github.(*RepositoriesService).CreateHook"

var RequestMatchRepositoriesCreateKey RequestMatch = "github.(*RepositoriesService).CreateKey"

var RequestMatchRepositoriesCreateProject RequestMatch = "github.(*RepositoriesService).CreateProject"

var RequestMatchRepositoriesCreateRelease RequestMatch = "github.(*RepositoriesService).CreateRelease"

var RequestMatchRepositoriesCreateStatus RequestMatch = "github.(*RepositoriesService).CreateStatus"

var RequestMatchRepositoriesCreateUpdateEnvironment RequestMatch = "github.(*RepositoriesService).CreateUpdateEnvironment"

var RequestMatchRepositoriesDelete RequestMatch = "github.(*RepositoriesService).Delete"

var RequestMatchRepositoriesDeleteComment RequestMatch = "github.(*RepositoriesService).DeleteComment"

var RequestMatchRepositoriesDeleteDeployment RequestMatch = "github.(*RepositoriesService).DeleteDeployment"

var RequestMatchRepositoriesDeleteEnvironment RequestMatch = "github.(*RepositoriesService).DeleteEnvironment"

var RequestMatchRepositoriesDeleteFile RequestMatch = "github.(*RepositoriesService).DeleteFile"

var RequestMatchRepositoriesDeleteHook RequestMatch = "github.(*RepositoriesService).DeleteHook"

var RequestMatchRepositoriesDeleteInvitation RequestMatch = "github.(*RepositoriesService).DeleteInvitation"

var RequestMatchRepositoriesDeleteKey RequestMatch = "github.(*RepositoriesService).DeleteKey"

var RequestMatchRepositoriesDeletePreReceiveHook RequestMatch = "github.(*RepositoriesService).DeletePreReceiveHook"

var RequestMatchRepositoriesDeleteRelease RequestMatch = "github.(*RepositoriesService).DeleteRelease"

var RequestMatchRepositoriesDeleteReleaseAsset RequestMatch = "github.(*RepositoriesService).DeleteReleaseAsset"

var RequestMatchRepositoriesDisableAutomatedSecurityFixes RequestMatch = "github.(*RepositoriesService).DisableAutomatedSecurityFixes"

var RequestMatchRepositoriesDisableDismissalRestrictions RequestMatch = "github.(*RepositoriesService).DisableDismissalRestrictions"

var RequestMatchRepositoriesDisablePages RequestMatch = "github.(*RepositoriesService).DisablePages"

var RequestMatchRepositoriesDisableVulnerabilityAlerts RequestMatch = "github.(*RepositoriesService).DisableVulnerabilityAlerts"

var RequestMatchRepositoriesDispatch RequestMatch = "github.(*RepositoriesService).Dispatch"

var RequestMatchRepositoriesDownloadContents RequestMatch = "github.(*RepositoriesService).DownloadContents"

var RequestMatchRepositoriesDownloadContentsWithMeta RequestMatch = "github.(*RepositoriesService).DownloadContentsWithMeta"

var RequestMatchRepositoriesDownloadReleaseAsset RequestMatch = "github.(*RepositoriesService).DownloadReleaseAsset"

var RequestMatchRepositoriesEdit RequestMatch = "github.(*RepositoriesService).Edit"

var RequestMatchRepositoriesEditHook RequestMatch = "github.(*RepositoriesService).EditHook"

var RequestMatchRepositoriesEditRelease RequestMatch = "github.(*RepositoriesService).EditRelease"

var RequestMatchRepositoriesEditReleaseAsset RequestMatch = "github.(*RepositoriesService).EditReleaseAsset"

var RequestMatchRepositoriesEnableAutomatedSecurityFixes RequestMatch = "github.(*RepositoriesService).EnableAutomatedSecurityFixes"

var RequestMatchRepositoriesEnablePages RequestMatch = "github.(*RepositoriesService).EnablePages"

var RequestMatchRepositoriesEnableVulnerabilityAlerts RequestMatch = "github.(*RepositoriesService).EnableVulnerabilityAlerts"

var RequestMatchRepositoriesGet RequestMatch = "github.(*RepositoriesService).Get"

var RequestMatchRepositoriesGetAdminEnforcement RequestMatch = "github.(*RepositoriesService).GetAdminEnforcement"

var RequestMatchRepositoriesGetArchiveLink RequestMatch = "github.(*RepositoriesService).GetArchiveLink"

var RequestMatchRepositoriesGetBranch RequestMatch = "github.(*RepositoriesService).GetBranch"

var RequestMatchRepositoriesGetBranchProtection RequestMatch = "github.(*RepositoriesService).GetBranchProtection"

var RequestMatchRepositoriesGetByID RequestMatch = "github.(*RepositoriesService).GetByID"

var RequestMatchRepositoriesGetCodeOfConduct RequestMatch = "github.(*RepositoriesService).GetCodeOfConduct"

var RequestMatchRepositoriesGetCombinedStatus RequestMatch = "github.(*RepositoriesService).GetCombinedStatus"

var RequestMatchRepositoriesGetComment RequestMatch = "github.(*RepositoriesService).GetComment"

var RequestMatchRepositoriesGetCommit RequestMatch = "github.(*RepositoriesService).GetCommit"

var RequestMatchRepositoriesGetCommitRaw RequestMatch = "github.(*RepositoriesService).GetCommitRaw"

var RequestMatchRepositoriesGetCommitSHA1 RequestMatch = "github.(*RepositoriesService).GetCommitSHA1"

var RequestMatchRepositoriesGetCommunityHealthMetrics RequestMatch = "github.(*RepositoriesService).GetCommunityHealthMetrics"

var RequestMatchRepositoriesGetContents RequestMatch = "github.(*RepositoriesService).GetContents"

var RequestMatchRepositoriesGetDeployment RequestMatch = "github.(*RepositoriesService).GetDeployment"

var RequestMatchRepositoriesGetDeploymentStatus RequestMatch = "github.(*RepositoriesService).GetDeploymentStatus"

var RequestMatchRepositoriesGetEnvironment RequestMatch = "github.(*RepositoriesService).GetEnvironment"

var RequestMatchRepositoriesGetHook RequestMatch = "github.(*RepositoriesService).GetHook"

var RequestMatchRepositoriesGetKey RequestMatch = "github.(*RepositoriesService).GetKey"

var RequestMatchRepositoriesGetLatestPagesBuild RequestMatch = "github.(*RepositoriesService).GetLatestPagesBuild"

var RequestMatchRepositoriesGetLatestRelease RequestMatch = "github.(*RepositoriesService).GetLatestRelease"

var RequestMatchRepositoriesGetPageBuild RequestMatch = "github.(*RepositoriesService).GetPageBuild"

var RequestMatchRepositoriesGetPagesInfo RequestMatch = "github.(*RepositoriesService).GetPagesInfo"

var RequestMatchRepositoriesGetPermissionLevel RequestMatch = "github.(*RepositoriesService).GetPermissionLevel"

var RequestMatchRepositoriesGetPreReceiveHook RequestMatch = "github.(*RepositoriesService).GetPreReceiveHook"

var RequestMatchRepositoriesGetPullRequestReviewEnforcement RequestMatch = "github.(*RepositoriesService).GetPullRequestReviewEnforcement"

var RequestMatchRepositoriesGetReadme RequestMatch = "github.(*RepositoriesService).GetReadme"

var RequestMatchRepositoriesGetRelease RequestMatch = "github.(*RepositoriesService).GetRelease"

var RequestMatchRepositoriesGetReleaseAsset RequestMatch = "github.(*RepositoriesService).GetReleaseAsset"

var RequestMatchRepositoriesGetReleaseByTag RequestMatch = "github.(*RepositoriesService).GetReleaseByTag"

var RequestMatchRepositoriesGetRequiredStatusChecks RequestMatch = "github.(*RepositoriesService).GetRequiredStatusChecks"

var RequestMatchRepositoriesGetSignaturesProtectedBranch RequestMatch = "github.(*RepositoriesService).GetSignaturesProtectedBranch"

var RequestMatchRepositoriesGetVulnerabilityAlerts RequestMatch = "github.(*RepositoriesService).GetVulnerabilityAlerts"

var RequestMatchRepositoriesIsCollaborator RequestMatch = "github.(*RepositoriesService).IsCollaborator"

var RequestMatchRepositoriesLicense RequestMatch = "github.(*RepositoriesService).License"

var RequestMatchRepositoriesList RequestMatch = "github.(*RepositoriesService).List"

var RequestMatchRepositoriesListAll RequestMatch = "github.(*RepositoriesService).ListAll"

var RequestMatchRepositoriesListAllTopics RequestMatch = "github.(*RepositoriesService).ListAllTopics"

var RequestMatchRepositoriesListApps RequestMatch = "github.(*RepositoriesService).ListApps"

var RequestMatchRepositoriesListBranches RequestMatch = "github.(*RepositoriesService).ListBranches"

var RequestMatchRepositoriesListBranchesHeadCommit RequestMatch = "github.(*RepositoriesService).ListBranchesHeadCommit"

var RequestMatchRepositoriesListByOrg RequestMatch = "github.(*RepositoriesService).ListByOrg"

var RequestMatchRepositoriesListCodeFrequency RequestMatch = "github.(*RepositoriesService).ListCodeFrequency"

var RequestMatchRepositoriesListCollaborators RequestMatch = "github.(*RepositoriesService).ListCollaborators"

var RequestMatchRepositoriesListComments RequestMatch = "github.(*RepositoriesService).ListComments"

var RequestMatchRepositoriesListCommitActivity RequestMatch = "github.(*RepositoriesService).ListCommitActivity"

var RequestMatchRepositoriesListCommitComments RequestMatch = "github.(*RepositoriesService).ListCommitComments"

var RequestMatchRepositoriesListCommits RequestMatch = "github.(*RepositoriesService).ListCommits"

var RequestMatchRepositoriesListContributors RequestMatch = "github.(*RepositoriesService).ListContributors"

var RequestMatchRepositoriesListContributorsStats RequestMatch = "github.(*RepositoriesService).ListContributorsStats"

var RequestMatchRepositoriesListDeploymentStatuses RequestMatch = "github.(*RepositoriesService).ListDeploymentStatuses"

var RequestMatchRepositoriesListDeployments RequestMatch = "github.(*RepositoriesService).ListDeployments"

var RequestMatchRepositoriesListEnvironments RequestMatch = "github.(*RepositoriesService).ListEnvironments"

var RequestMatchRepositoriesListForks RequestMatch = "github.(*RepositoriesService).ListForks"

var RequestMatchRepositoriesListHooks RequestMatch = "github.(*RepositoriesService).ListHooks"

var RequestMatchRepositoriesListInvitations RequestMatch = "github.(*RepositoriesService).ListInvitations"

var RequestMatchRepositoriesListKeys RequestMatch = "github.(*RepositoriesService).ListKeys"

var RequestMatchRepositoriesListLanguages RequestMatch = "github.(*RepositoriesService).ListLanguages"

var RequestMatchRepositoriesListPagesBuilds RequestMatch = "github.(*RepositoriesService).ListPagesBuilds"

var RequestMatchRepositoriesListParticipation RequestMatch = "github.(*RepositoriesService).ListParticipation"

var RequestMatchRepositoriesListPreReceiveHooks RequestMatch = "github.(*RepositoriesService).ListPreReceiveHooks"

var RequestMatchRepositoriesListProjects RequestMatch = "github.(*RepositoriesService).ListProjects"

var RequestMatchRepositoriesListPunchCard RequestMatch = "github.(*RepositoriesService).ListPunchCard"

var RequestMatchRepositoriesListReleaseAssets RequestMatch = "github.(*RepositoriesService).ListReleaseAssets"

var RequestMatchRepositoriesListReleases RequestMatch = "github.(*RepositoriesService).ListReleases"

var RequestMatchRepositoriesListRequiredStatusChecksContexts RequestMatch = "github.(*RepositoriesService).ListRequiredStatusChecksContexts"

var RequestMatchRepositoriesListStatuses RequestMatch = "github.(*RepositoriesService).ListStatuses"

var RequestMatchRepositoriesListTags RequestMatch = "github.(*RepositoriesService).ListTags"

var RequestMatchRepositoriesListTeams RequestMatch = "github.(*RepositoriesService).ListTeams"

var RequestMatchRepositoriesListTrafficClones RequestMatch = "github.(*RepositoriesService).ListTrafficClones"

var RequestMatchRepositoriesListTrafficPaths RequestMatch = "github.(*RepositoriesService).ListTrafficPaths"

var RequestMatchRepositoriesListTrafficReferrers RequestMatch = "github.(*RepositoriesService).ListTrafficReferrers"

var RequestMatchRepositoriesListTrafficViews RequestMatch = "github.(*RepositoriesService).ListTrafficViews"

var RequestMatchRepositoriesMerge RequestMatch = "github.(*RepositoriesService).Merge"

var RequestMatchRepositoriesOptionalSignaturesOnProtectedBranch RequestMatch = "github.(*RepositoriesService).OptionalSignaturesOnProtectedBranch"

var RequestMatchRepositoriesPingHook RequestMatch = "github.(*RepositoriesService).PingHook"

var RequestMatchRepositoriesRemoveAdminEnforcement RequestMatch = "github.(*RepositoriesService).RemoveAdminEnforcement"

var RequestMatchRepositoriesRemoveAppRestrictions RequestMatch = "github.(*RepositoriesService).RemoveAppRestrictions"

var RequestMatchRepositoriesRemoveBranchProtection RequestMatch = "github.(*RepositoriesService).RemoveBranchProtection"

var RequestMatchRepositoriesRemoveCollaborator RequestMatch = "github.(*RepositoriesService).RemoveCollaborator"

var RequestMatchRepositoriesRemovePullRequestReviewEnforcement RequestMatch = "github.(*RepositoriesService).RemovePullRequestReviewEnforcement"

var RequestMatchRepositoriesRemoveRequiredStatusChecks RequestMatch = "github.(*RepositoriesService).RemoveRequiredStatusChecks"

var RequestMatchRepositoriesReplaceAllTopics RequestMatch = "github.(*RepositoriesService).ReplaceAllTopics"

var RequestMatchRepositoriesReplaceAppRestrictions RequestMatch = "github.(*RepositoriesService).ReplaceAppRestrictions"

var RequestMatchRepositoriesRequestPageBuild RequestMatch = "github.(*RepositoriesService).RequestPageBuild"

var RequestMatchRepositoriesRequireSignaturesOnProtectedBranch RequestMatch = "github.(*RepositoriesService).RequireSignaturesOnProtectedBranch"

var RequestMatchRepositoriesTestHook RequestMatch = "github.(*RepositoriesService).TestHook"

var RequestMatchRepositoriesTransfer RequestMatch = "github.(*RepositoriesService).Transfer"

var RequestMatchRepositoriesUpdateBranchProtection RequestMatch = "github.(*RepositoriesService).UpdateBranchProtection"

var RequestMatchRepositoriesUpdateComment RequestMatch = "github.(*RepositoriesService).UpdateComment"

var RequestMatchRepositoriesUpdateFile RequestMatch = "github.(*RepositoriesService).UpdateFile"

var RequestMatchRepositoriesUpdateInvitation RequestMatch = "github.(*RepositoriesService).UpdateInvitation"

var RequestMatchRepositoriesUpdatePages RequestMatch = "github.(*RepositoriesService).UpdatePages"

var RequestMatchRepositoriesUpdatePreReceiveHook RequestMatch = "github.(*RepositoriesService).UpdatePreReceiveHook"

var RequestMatchRepositoriesUpdatePullRequestReviewEnforcement RequestMatch = "github.(*RepositoriesService).UpdatePullRequestReviewEnforcement"

var RequestMatchRepositoriesUpdateRequiredStatusChecks RequestMatch = "github.(*RepositoriesService).UpdateRequiredStatusChecks"

var RequestMatchRepositoriesUploadReleaseAsset RequestMatch = "github.(*RepositoriesService).UploadReleaseAsset"

var RequestMatchRepositoryContentGetContent RequestMatch = "github.(*RepositoryContent).GetContent"

var RequestMatchRequiredReviewerUnmarshalJSON RequestMatch = "github.(*RequiredReviewer).UnmarshalJSON"

var RequestMatchSearchCode RequestMatch = "github.(*SearchService).Code"

var RequestMatchSearchCommits RequestMatch = "github.(*SearchService).Commits"

var RequestMatchSearchIssues RequestMatch = "github.(*SearchService).Issues"

var RequestMatchSearchLabels RequestMatch = "github.(*SearchService).Labels"

var RequestMatchSearchRepositories RequestMatch = "github.(*SearchService).Repositories"

var RequestMatchSearchTopics RequestMatch = "github.(*SearchService).Topics"

var RequestMatchSearchUsers RequestMatch = "github.(*SearchService).Users"

var RequestMatchHookString RequestMatch = "github.(*ServiceHook).String"

var RequestMatchTeamsAddTeamMembershipByID RequestMatch = "github.(*TeamsService).AddTeamMembershipByID"

var RequestMatchTeamsAddTeamMembershipBySlug RequestMatch = "github.(*TeamsService).AddTeamMembershipBySlug"

var RequestMatchTeamsAddTeamProjectByID RequestMatch = "github.(*TeamsService).AddTeamProjectByID"

var RequestMatchTeamsAddTeamProjectBySlug RequestMatch = "github.(*TeamsService).AddTeamProjectBySlug"

var RequestMatchTeamsAddTeamRepoByID RequestMatch = "github.(*TeamsService).AddTeamRepoByID"

var RequestMatchTeamsAddTeamRepoBySlug RequestMatch = "github.(*TeamsService).AddTeamRepoBySlug"

var RequestMatchTeamsCreateCommentByID RequestMatch = "github.(*TeamsService).CreateCommentByID"

var RequestMatchTeamsCreateCommentBySlug RequestMatch = "github.(*TeamsService).CreateCommentBySlug"

var RequestMatchTeamsCreateDiscussionByID RequestMatch = "github.(*TeamsService).CreateDiscussionByID"

var RequestMatchTeamsCreateDiscussionBySlug RequestMatch = "github.(*TeamsService).CreateDiscussionBySlug"

var RequestMatchTeamsCreateOrUpdateIDPGroupConnectionsByID RequestMatch = "github.(*TeamsService).CreateOrUpdateIDPGroupConnectionsByID"

var RequestMatchTeamsCreateOrUpdateIDPGroupConnectionsBySlug RequestMatch = "github.(*TeamsService).CreateOrUpdateIDPGroupConnectionsBySlug"

var RequestMatchTeamsCreateTeam RequestMatch = "github.(*TeamsService).CreateTeam"

var RequestMatchTeamsDeleteCommentByID RequestMatch = "github.(*TeamsService).DeleteCommentByID"

var RequestMatchTeamsDeleteCommentBySlug RequestMatch = "github.(*TeamsService).DeleteCommentBySlug"

var RequestMatchTeamsDeleteDiscussionByID RequestMatch = "github.(*TeamsService).DeleteDiscussionByID"

var RequestMatchTeamsDeleteDiscussionBySlug RequestMatch = "github.(*TeamsService).DeleteDiscussionBySlug"

var RequestMatchTeamsDeleteTeamByID RequestMatch = "github.(*TeamsService).DeleteTeamByID"

var RequestMatchTeamsDeleteTeamBySlug RequestMatch = "github.(*TeamsService).DeleteTeamBySlug"

var RequestMatchTeamsEditCommentByID RequestMatch = "github.(*TeamsService).EditCommentByID"

var RequestMatchTeamsEditCommentBySlug RequestMatch = "github.(*TeamsService).EditCommentBySlug"

var RequestMatchTeamsEditDiscussionByID RequestMatch = "github.(*TeamsService).EditDiscussionByID"

var RequestMatchTeamsEditDiscussionBySlug RequestMatch = "github.(*TeamsService).EditDiscussionBySlug"

var RequestMatchTeamsEditTeamByID RequestMatch = "github.(*TeamsService).EditTeamByID"

var RequestMatchTeamsEditTeamBySlug RequestMatch = "github.(*TeamsService).EditTeamBySlug"

var RequestMatchTeamsGetCommentByID RequestMatch = "github.(*TeamsService).GetCommentByID"

var RequestMatchTeamsGetCommentBySlug RequestMatch = "github.(*TeamsService).GetCommentBySlug"

var RequestMatchTeamsGetDiscussionByID RequestMatch = "github.(*TeamsService).GetDiscussionByID"

var RequestMatchTeamsGetDiscussionBySlug RequestMatch = "github.(*TeamsService).GetDiscussionBySlug"

var RequestMatchTeamsGetTeamByID RequestMatch = "github.(*TeamsService).GetTeamByID"

var RequestMatchTeamsGetTeamBySlug RequestMatch = "github.(*TeamsService).GetTeamBySlug"

var RequestMatchTeamsGetTeamMembershipByID RequestMatch = "github.(*TeamsService).GetTeamMembershipByID"

var RequestMatchTeamsGetTeamMembershipBySlug RequestMatch = "github.(*TeamsService).GetTeamMembershipBySlug"

var RequestMatchTeamsIsTeamRepoByID RequestMatch = "github.(*TeamsService).IsTeamRepoByID"

var RequestMatchTeamsIsTeamRepoBySlug RequestMatch = "github.(*TeamsService).IsTeamRepoBySlug"

var RequestMatchTeamsListChildTeamsByParentID RequestMatch = "github.(*TeamsService).ListChildTeamsByParentID"

var RequestMatchTeamsListChildTeamsByParentSlug RequestMatch = "github.(*TeamsService).ListChildTeamsByParentSlug"

var RequestMatchTeamsListCommentsByID RequestMatch = "github.(*TeamsService).ListCommentsByID"

var RequestMatchTeamsListCommentsBySlug RequestMatch = "github.(*TeamsService).ListCommentsBySlug"

var RequestMatchTeamsListDiscussionsByID RequestMatch = "github.(*TeamsService).ListDiscussionsByID"

var RequestMatchTeamsListDiscussionsBySlug RequestMatch = "github.(*TeamsService).ListDiscussionsBySlug"

var RequestMatchTeamsListIDPGroupsForTeamByID RequestMatch = "github.(*TeamsService).ListIDPGroupsForTeamByID"

var RequestMatchTeamsListIDPGroupsForTeamBySlug RequestMatch = "github.(*TeamsService).ListIDPGroupsForTeamBySlug"

var RequestMatchTeamsListIDPGroupsInOrganization RequestMatch = "github.(*TeamsService).ListIDPGroupsInOrganization"

var RequestMatchTeamsListPendingTeamInvitationsByID RequestMatch = "github.(*TeamsService).ListPendingTeamInvitationsByID"

var RequestMatchTeamsListPendingTeamInvitationsBySlug RequestMatch = "github.(*TeamsService).ListPendingTeamInvitationsBySlug"

var RequestMatchTeamsListTeamMembersByID RequestMatch = "github.(*TeamsService).ListTeamMembersByID"

var RequestMatchTeamsListTeamMembersBySlug RequestMatch = "github.(*TeamsService).ListTeamMembersBySlug"

var RequestMatchTeamsListTeamProjectsByID RequestMatch = "github.(*TeamsService).ListTeamProjectsByID"

var RequestMatchTeamsListTeamProjectsBySlug RequestMatch = "github.(*TeamsService).ListTeamProjectsBySlug"

var RequestMatchTeamsListTeamReposByID RequestMatch = "github.(*TeamsService).ListTeamReposByID"

var RequestMatchTeamsListTeamReposBySlug RequestMatch = "github.(*TeamsService).ListTeamReposBySlug"

var RequestMatchTeamsListTeams RequestMatch = "github.(*TeamsService).ListTeams"

var RequestMatchTeamsListUserTeams RequestMatch = "github.(*TeamsService).ListUserTeams"

var RequestMatchTeamsRemoveTeamMembershipByID RequestMatch = "github.(*TeamsService).RemoveTeamMembershipByID"

var RequestMatchTeamsRemoveTeamMembershipBySlug RequestMatch = "github.(*TeamsService).RemoveTeamMembershipBySlug"

var RequestMatchTeamsRemoveTeamProjectByID RequestMatch = "github.(*TeamsService).RemoveTeamProjectByID"

var RequestMatchTeamsRemoveTeamProjectBySlug RequestMatch = "github.(*TeamsService).RemoveTeamProjectBySlug"

var RequestMatchTeamsRemoveTeamRepoByID RequestMatch = "github.(*TeamsService).RemoveTeamRepoByID"

var RequestMatchTeamsRemoveTeamRepoBySlug RequestMatch = "github.(*TeamsService).RemoveTeamRepoBySlug"

var RequestMatchTeamsReviewTeamProjectsByID RequestMatch = "github.(*TeamsService).ReviewTeamProjectsByID"

var RequestMatchTeamsReviewTeamProjectsBySlug RequestMatch = "github.(*TeamsService).ReviewTeamProjectsBySlug"

var RequestMatchTimestampUnmarshalJSON RequestMatch = "github.(*Timestamp).UnmarshalJSON"

var RequestMatchTreeEntryMarshalJSON RequestMatch = "github.(*TreeEntry).MarshalJSON"

var RequestMatchTwoFactorAuthErrorError RequestMatch = "github.(*TwoFactorAuthError).Error"

var RequestMatchUnauthenticatedRateLimitedTransportClient RequestMatch = "github.(*UnauthenticatedRateLimitedTransport).Client"

var RequestMatchUnauthenticatedRateLimitedTransportRoundTrip RequestMatch = "github.(*UnauthenticatedRateLimitedTransport).RoundTrip"

var RequestMatchUsersAcceptInvitation RequestMatch = "github.(*UsersService).AcceptInvitation"

var RequestMatchUsersAddEmails RequestMatch = "github.(*UsersService).AddEmails"

var RequestMatchUsersBlockUser RequestMatch = "github.(*UsersService).BlockUser"

var RequestMatchUsersCreateGPGKey RequestMatch = "github.(*UsersService).CreateGPGKey"

var RequestMatchUsersCreateKey RequestMatch = "github.(*UsersService).CreateKey"

var RequestMatchUsersCreateProject RequestMatch = "github.(*UsersService).CreateProject"

var RequestMatchUsersDeclineInvitation RequestMatch = "github.(*UsersService).DeclineInvitation"

var RequestMatchUsersDeleteEmails RequestMatch = "github.(*UsersService).DeleteEmails"

var RequestMatchUsersDeleteGPGKey RequestMatch = "github.(*UsersService).DeleteGPGKey"

var RequestMatchUsersDeleteKey RequestMatch = "github.(*UsersService).DeleteKey"

var RequestMatchUsersDemoteSiteAdmin RequestMatch = "github.(*UsersService).DemoteSiteAdmin"

var RequestMatchUsersEdit RequestMatch = "github.(*UsersService).Edit"

var RequestMatchUsersFollow RequestMatch = "github.(*UsersService).Follow"

var RequestMatchUsersGet RequestMatch = "github.(*UsersService).Get"

var RequestMatchUsersGetByID RequestMatch = "github.(*UsersService).GetByID"

var RequestMatchUsersGetGPGKey RequestMatch = "github.(*UsersService).GetGPGKey"

var RequestMatchUsersGetHovercard RequestMatch = "github.(*UsersService).GetHovercard"

var RequestMatchUsersGetKey RequestMatch = "github.(*UsersService).GetKey"

var RequestMatchUsersIsBlocked RequestMatch = "github.(*UsersService).IsBlocked"

var RequestMatchUsersIsFollowing RequestMatch = "github.(*UsersService).IsFollowing"

var RequestMatchUsersListAll RequestMatch = "github.(*UsersService).ListAll"

var RequestMatchUsersListBlockedUsers RequestMatch = "github.(*UsersService).ListBlockedUsers"

var RequestMatchUsersListEmails RequestMatch = "github.(*UsersService).ListEmails"

var RequestMatchUsersListFollowers RequestMatch = "github.(*UsersService).ListFollowers"

var RequestMatchUsersListFollowing RequestMatch = "github.(*UsersService).ListFollowing"

var RequestMatchUsersListGPGKeys RequestMatch = "github.(*UsersService).ListGPGKeys"

var RequestMatchUsersListInvitations RequestMatch = "github.(*UsersService).ListInvitations"

var RequestMatchUsersListKeys RequestMatch = "github.(*UsersService).ListKeys"

var RequestMatchUsersListProjects RequestMatch = "github.(*UsersService).ListProjects"

var RequestMatchUsersPromoteSiteAdmin RequestMatch = "github.(*UsersService).PromoteSiteAdmin"

var RequestMatchUsersSuspend RequestMatch = "github.(*UsersService).Suspend"

var RequestMatchUsersUnblockUser RequestMatch = "github.(*UsersService).UnblockUser"

var RequestMatchUsersUnfollow RequestMatch = "github.(*UsersService).Unfollow"

var RequestMatchUsersUnsuspend RequestMatch = "github.(*UsersService).Unsuspend"
