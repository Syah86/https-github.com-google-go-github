// Copyright 2022 The go-github AUTHORS. All rights reserved.
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by gen-marker-methods; DO NOT EDIT.
// Instead, please run "go generate ./..." as described here:
// https://github.com/google/go-github/blob/master/CONTRIBUTING.md#submitting-a-patch

package github

// GHEvent implements the GitHubEvent marker interface.
func (b *BranchProtectionRuleEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (c *CheckRunEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (c *CheckSuiteEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (c *CodeScanningAlertEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (c *CommitCommentEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (c *ContentReferenceEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (c *CreateEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (d *DeleteEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (d *DeployKeyEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (d *DeploymentEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (d *DeploymentStatusEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (d *DiscussionEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (e *Event) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (f *ForkEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (g *GitHubAppAuthorizationEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (g *GollumEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (i *InstallationEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (i *InstallationRepositoriesEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (i *IssueCommentEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (i *IssueEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (i *IssuesEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (l *LabelEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (m *MarketplacePurchaseEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (m *MemberEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (m *MembershipEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (m *MetaEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (m *MilestoneEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (o *OrganizationEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (o *OrgBlockEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (p *PackageEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (p *PageBuildEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (p *PingEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (p *ProjectCardEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (p *ProjectColumnEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (p *ProjectEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (p *PublicEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (p *PullRequestEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (p *PullRequestReviewCommentEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (p *PullRequestReviewEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (p *PullRequestReviewThreadEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (p *PullRequestTargetEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (p *PushEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (r *ReleaseEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (r *RepositoryDispatchEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (r *RepositoryEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (r *RepositoryImportEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (r *RepositoryVulnerabilityAlertEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (s *SecretScanningAlertEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (s *SecurityAdvisoryEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (s *StarEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (s *StatusEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (t *TeamAddEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (t *TeamEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (u *UserEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (w *WatchEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (w *WorkflowDispatchEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (w *WorkflowJobEvent) GHEvent() {}

// GHEvent implements the GitHubEvent marker interface.
func (w *WorkflowRunEvent) GHEvent() {}
